/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authSetupPasswordRouteImport } from './routes/(auth)/setup-password'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedStoresIndexRouteImport } from './routes/_authenticated/stores/index'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedRolesIndexRouteImport } from './routes/_authenticated/roles/index'
import { Route as AuthenticatedPinMessagesIndexRouteImport } from './routes/_authenticated/pin-messages/index'
import { Route as AuthenticatedMenuButtonsIndexRouteImport } from './routes/_authenticated/menu-buttons/index'
import { Route as AuthenticatedMediaLibraryIndexRouteImport } from './routes/_authenticated/media-library/index'
import { Route as AuthenticatedBotTemplatesIndexRouteImport } from './routes/_authenticated/bot-templates/index'
import { Route as AuthenticatedAdvertisementsIndexRouteImport } from './routes/_authenticated/advertisements/index'
import { Route as AuthenticatedSettingsSecurityRouteImport } from './routes/_authenticated/settings/security'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedErrorsErrorRouteImport } from './routes/_authenticated/errors/$error'
import { Route as AuthenticatedDashboardStoreRouteImport } from './routes/_authenticated/dashboard/store'
import { Route as AuthenticatedDashboardOverviewRouteImport } from './routes/_authenticated/dashboard/overview'
import { Route as AuthenticatedDashboardCustomersRouteImport } from './routes/_authenticated/dashboard/customers'
import { Route as AuthenticatedDashboardAdvertisementRouteImport } from './routes/_authenticated/dashboard/advertisement'
import { Route as AuthenticatedTelegraphBotIndexRouteImport } from './routes/_authenticated/telegraph/bot/index'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authSetupPasswordRoute = authSetupPasswordRouteImport.update({
  id: '/(auth)/setup-password',
  path: '/setup-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedStoresIndexRoute =
  AuthenticatedStoresIndexRouteImport.update({
    id: '/stores/',
    path: '/stores/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedRolesIndexRoute = AuthenticatedRolesIndexRouteImport.update({
  id: '/roles/',
  path: '/roles/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedPinMessagesIndexRoute =
  AuthenticatedPinMessagesIndexRouteImport.update({
    id: '/pin-messages/',
    path: '/pin-messages/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedMenuButtonsIndexRoute =
  AuthenticatedMenuButtonsIndexRouteImport.update({
    id: '/menu-buttons/',
    path: '/menu-buttons/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedMediaLibraryIndexRoute =
  AuthenticatedMediaLibraryIndexRouteImport.update({
    id: '/media-library/',
    path: '/media-library/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedBotTemplatesIndexRoute =
  AuthenticatedBotTemplatesIndexRouteImport.update({
    id: '/bot-templates/',
    path: '/bot-templates/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdvertisementsIndexRoute =
  AuthenticatedAdvertisementsIndexRouteImport.update({
    id: '/advertisements/',
    path: '/advertisements/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsSecurityRoute =
  AuthenticatedSettingsSecurityRouteImport.update({
    id: '/security',
    path: '/security',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedErrorsErrorRoute =
  AuthenticatedErrorsErrorRouteImport.update({
    id: '/errors/$error',
    path: '/errors/$error',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDashboardStoreRoute =
  AuthenticatedDashboardStoreRouteImport.update({
    id: '/dashboard/store',
    path: '/dashboard/store',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDashboardOverviewRoute =
  AuthenticatedDashboardOverviewRouteImport.update({
    id: '/dashboard/overview',
    path: '/dashboard/overview',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDashboardCustomersRoute =
  AuthenticatedDashboardCustomersRouteImport.update({
    id: '/dashboard/customers',
    path: '/dashboard/customers',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDashboardAdvertisementRoute =
  AuthenticatedDashboardAdvertisementRouteImport.update({
    id: '/dashboard/advertisement',
    path: '/dashboard/advertisement',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedTelegraphBotIndexRoute =
  AuthenticatedTelegraphBotIndexRouteImport.update({
    id: '/telegraph/bot/',
    path: '/telegraph/bot/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/otp': typeof authOtpRoute
  '/setup-password': typeof authSetupPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/dashboard/advertisement': typeof AuthenticatedDashboardAdvertisementRoute
  '/dashboard/customers': typeof AuthenticatedDashboardCustomersRoute
  '/dashboard/overview': typeof AuthenticatedDashboardOverviewRoute
  '/dashboard/store': typeof AuthenticatedDashboardStoreRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/security': typeof AuthenticatedSettingsSecurityRoute
  '/advertisements': typeof AuthenticatedAdvertisementsIndexRoute
  '/bot-templates': typeof AuthenticatedBotTemplatesIndexRoute
  '/media-library': typeof AuthenticatedMediaLibraryIndexRoute
  '/menu-buttons': typeof AuthenticatedMenuButtonsIndexRoute
  '/pin-messages': typeof AuthenticatedPinMessagesIndexRoute
  '/roles': typeof AuthenticatedRolesIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/stores': typeof AuthenticatedStoresIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/telegraph/bot': typeof AuthenticatedTelegraphBotIndexRoute
}
export interface FileRoutesByTo {
  '/otp': typeof authOtpRoute
  '/setup-password': typeof authSetupPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/dashboard/advertisement': typeof AuthenticatedDashboardAdvertisementRoute
  '/dashboard/customers': typeof AuthenticatedDashboardCustomersRoute
  '/dashboard/overview': typeof AuthenticatedDashboardOverviewRoute
  '/dashboard/store': typeof AuthenticatedDashboardStoreRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/security': typeof AuthenticatedSettingsSecurityRoute
  '/advertisements': typeof AuthenticatedAdvertisementsIndexRoute
  '/bot-templates': typeof AuthenticatedBotTemplatesIndexRoute
  '/media-library': typeof AuthenticatedMediaLibraryIndexRoute
  '/menu-buttons': typeof AuthenticatedMenuButtonsIndexRoute
  '/pin-messages': typeof AuthenticatedPinMessagesIndexRoute
  '/roles': typeof AuthenticatedRolesIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/stores': typeof AuthenticatedStoresIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/telegraph/bot': typeof AuthenticatedTelegraphBotIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/setup-password': typeof authSetupPasswordRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/dashboard/advertisement': typeof AuthenticatedDashboardAdvertisementRoute
  '/_authenticated/dashboard/customers': typeof AuthenticatedDashboardCustomersRoute
  '/_authenticated/dashboard/overview': typeof AuthenticatedDashboardOverviewRoute
  '/_authenticated/dashboard/store': typeof AuthenticatedDashboardStoreRoute
  '/_authenticated/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/security': typeof AuthenticatedSettingsSecurityRoute
  '/_authenticated/advertisements/': typeof AuthenticatedAdvertisementsIndexRoute
  '/_authenticated/bot-templates/': typeof AuthenticatedBotTemplatesIndexRoute
  '/_authenticated/media-library/': typeof AuthenticatedMediaLibraryIndexRoute
  '/_authenticated/menu-buttons/': typeof AuthenticatedMenuButtonsIndexRoute
  '/_authenticated/pin-messages/': typeof AuthenticatedPinMessagesIndexRoute
  '/_authenticated/roles/': typeof AuthenticatedRolesIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/stores/': typeof AuthenticatedStoresIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_authenticated/telegraph/bot/': typeof AuthenticatedTelegraphBotIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/settings'
    | '/otp'
    | '/setup-password'
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/dashboard/advertisement'
    | '/dashboard/customers'
    | '/dashboard/overview'
    | '/dashboard/store'
    | '/errors/$error'
    | '/settings/appearance'
    | '/settings/security'
    | '/advertisements'
    | '/bot-templates'
    | '/media-library'
    | '/menu-buttons'
    | '/pin-messages'
    | '/roles'
    | '/settings/'
    | '/stores'
    | '/users'
    | '/telegraph/bot'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/otp'
    | '/setup-password'
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/dashboard/advertisement'
    | '/dashboard/customers'
    | '/dashboard/overview'
    | '/dashboard/store'
    | '/errors/$error'
    | '/settings/appearance'
    | '/settings/security'
    | '/advertisements'
    | '/bot-templates'
    | '/media-library'
    | '/menu-buttons'
    | '/pin-messages'
    | '/roles'
    | '/settings'
    | '/stores'
    | '/users'
    | '/telegraph/bot'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/otp'
    | '/(auth)/setup-password'
    | '/(auth)/sign-in'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/dashboard/advertisement'
    | '/_authenticated/dashboard/customers'
    | '/_authenticated/dashboard/overview'
    | '/_authenticated/dashboard/store'
    | '/_authenticated/errors/$error'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/security'
    | '/_authenticated/advertisements/'
    | '/_authenticated/bot-templates/'
    | '/_authenticated/media-library/'
    | '/_authenticated/menu-buttons/'
    | '/_authenticated/pin-messages/'
    | '/_authenticated/roles/'
    | '/_authenticated/settings/'
    | '/_authenticated/stores/'
    | '/_authenticated/users/'
    | '/_authenticated/telegraph/bot/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authOtpRoute: typeof authOtpRoute
  authSetupPasswordRoute: typeof authSetupPasswordRoute
  authSignInRoute: typeof authSignInRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/setup-password': {
      id: '/(auth)/setup-password'
      path: '/setup-password'
      fullPath: '/setup-password'
      preLoaderRoute: typeof authSetupPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/stores/': {
      id: '/_authenticated/stores/'
      path: '/stores'
      fullPath: '/stores'
      preLoaderRoute: typeof AuthenticatedStoresIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/roles/': {
      id: '/_authenticated/roles/'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof AuthenticatedRolesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/pin-messages/': {
      id: '/_authenticated/pin-messages/'
      path: '/pin-messages'
      fullPath: '/pin-messages'
      preLoaderRoute: typeof AuthenticatedPinMessagesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/menu-buttons/': {
      id: '/_authenticated/menu-buttons/'
      path: '/menu-buttons'
      fullPath: '/menu-buttons'
      preLoaderRoute: typeof AuthenticatedMenuButtonsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/media-library/': {
      id: '/_authenticated/media-library/'
      path: '/media-library'
      fullPath: '/media-library'
      preLoaderRoute: typeof AuthenticatedMediaLibraryIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/bot-templates/': {
      id: '/_authenticated/bot-templates/'
      path: '/bot-templates'
      fullPath: '/bot-templates'
      preLoaderRoute: typeof AuthenticatedBotTemplatesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/advertisements/': {
      id: '/_authenticated/advertisements/'
      path: '/advertisements'
      fullPath: '/advertisements'
      preLoaderRoute: typeof AuthenticatedAdvertisementsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/security': {
      id: '/_authenticated/settings/security'
      path: '/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof AuthenticatedSettingsSecurityRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/errors/$error': {
      id: '/_authenticated/errors/$error'
      path: '/errors/$error'
      fullPath: '/errors/$error'
      preLoaderRoute: typeof AuthenticatedErrorsErrorRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/store': {
      id: '/_authenticated/dashboard/store'
      path: '/dashboard/store'
      fullPath: '/dashboard/store'
      preLoaderRoute: typeof AuthenticatedDashboardStoreRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/overview': {
      id: '/_authenticated/dashboard/overview'
      path: '/dashboard/overview'
      fullPath: '/dashboard/overview'
      preLoaderRoute: typeof AuthenticatedDashboardOverviewRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/customers': {
      id: '/_authenticated/dashboard/customers'
      path: '/dashboard/customers'
      fullPath: '/dashboard/customers'
      preLoaderRoute: typeof AuthenticatedDashboardCustomersRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/advertisement': {
      id: '/_authenticated/dashboard/advertisement'
      path: '/dashboard/advertisement'
      fullPath: '/dashboard/advertisement'
      preLoaderRoute: typeof AuthenticatedDashboardAdvertisementRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/telegraph/bot/': {
      id: '/_authenticated/telegraph/bot/'
      path: '/telegraph/bot'
      fullPath: '/telegraph/bot'
      preLoaderRoute: typeof AuthenticatedTelegraphBotIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsSecurityRoute: typeof AuthenticatedSettingsSecurityRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsSecurityRoute: AuthenticatedSettingsSecurityRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedDashboardAdvertisementRoute: typeof AuthenticatedDashboardAdvertisementRoute
  AuthenticatedDashboardCustomersRoute: typeof AuthenticatedDashboardCustomersRoute
  AuthenticatedDashboardOverviewRoute: typeof AuthenticatedDashboardOverviewRoute
  AuthenticatedDashboardStoreRoute: typeof AuthenticatedDashboardStoreRoute
  AuthenticatedErrorsErrorRoute: typeof AuthenticatedErrorsErrorRoute
  AuthenticatedAdvertisementsIndexRoute: typeof AuthenticatedAdvertisementsIndexRoute
  AuthenticatedBotTemplatesIndexRoute: typeof AuthenticatedBotTemplatesIndexRoute
  AuthenticatedMediaLibraryIndexRoute: typeof AuthenticatedMediaLibraryIndexRoute
  AuthenticatedMenuButtonsIndexRoute: typeof AuthenticatedMenuButtonsIndexRoute
  AuthenticatedPinMessagesIndexRoute: typeof AuthenticatedPinMessagesIndexRoute
  AuthenticatedRolesIndexRoute: typeof AuthenticatedRolesIndexRoute
  AuthenticatedStoresIndexRoute: typeof AuthenticatedStoresIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
  AuthenticatedTelegraphBotIndexRoute: typeof AuthenticatedTelegraphBotIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedDashboardAdvertisementRoute:
    AuthenticatedDashboardAdvertisementRoute,
  AuthenticatedDashboardCustomersRoute: AuthenticatedDashboardCustomersRoute,
  AuthenticatedDashboardOverviewRoute: AuthenticatedDashboardOverviewRoute,
  AuthenticatedDashboardStoreRoute: AuthenticatedDashboardStoreRoute,
  AuthenticatedErrorsErrorRoute: AuthenticatedErrorsErrorRoute,
  AuthenticatedAdvertisementsIndexRoute: AuthenticatedAdvertisementsIndexRoute,
  AuthenticatedBotTemplatesIndexRoute: AuthenticatedBotTemplatesIndexRoute,
  AuthenticatedMediaLibraryIndexRoute: AuthenticatedMediaLibraryIndexRoute,
  AuthenticatedMenuButtonsIndexRoute: AuthenticatedMenuButtonsIndexRoute,
  AuthenticatedPinMessagesIndexRoute: AuthenticatedPinMessagesIndexRoute,
  AuthenticatedRolesIndexRoute: AuthenticatedRolesIndexRoute,
  AuthenticatedStoresIndexRoute: AuthenticatedStoresIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  AuthenticatedTelegraphBotIndexRoute: AuthenticatedTelegraphBotIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authOtpRoute: authOtpRoute,
  authSetupPasswordRoute: authSetupPasswordRoute,
  authSignInRoute: authSignInRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
